#!/usr/bin/envpython
#-*-coding:utf-8-*-
"""
__title__=''


构建股票的月线数据
根据作业1获取的所有股票数据，计算每一只股票最近一月的相关数据，并存入csv文件，具体如下表
交易日期，股票代码，股票名称，收盘价，成交量，成交额，月涨跌幅，交易天数

--去除一天都没有交易的股票
--不用在意代码的效率，能完成任务就行
--完成作业所需的所有知识，之前课程里面都讲过，可以反复看
--做完之后问助教要答案

"""
import pandas as pd
import os
import time
current_date=time.strftime("%Y_%m_%d ")

pd.set_option('expand_frame_repr', False)  # 当列太多时不换行
pd.set_option('display.max_rows', 5000)  # 最多显示数据的行数

def convert_from_day_to_month(df,year=2019,month=6,rule_type='1M'):
    df['交易日期'] = pd.to_datetime(df['交易日期'])
    df = df[df['成交量'] > 0]
    df = df[(df['交易日期'].dt.month == month)]
    df['交易天数']=len(df['交易日期'])
    df['涨跌幅'] = df['收盘价'].pct_change(1)
    df['月涨跌幅']=(df['涨跌幅'] + 1.0).cumprod()#累计计算月涨跌幅
    df.drop(['涨跌幅'], axis=1, inplace=True)#删除涨跌幅列

    period_df = df.resample(rule=rule_type, on='交易日期', base=0, label='right', closed='left').agg(
        {
            '股票代码':'first',
        '股票名称':'first',
            '开盘价': 'first',
            '最高价': 'max',
            '最低价': 'min',
            '收盘价': 'last',
            '成交量': 'sum',
            '交易天数':'max',
            '月涨跌幅':'last'

    }
) #agg 是字典操作，on的属性是index，而不是datetime

    period_df = period_df[['股票代码','股票名称','开盘价', '最高价', '最低价', '收盘价', '成交量','月涨跌幅','交易天数']]

    return period_df

def get_month_data():
    path='D:\workspace\homework\data\\basic_trading_data\stock_data'
    file_location = r'D:\workspace\homework\data\\basic_trading_data\stock_data'
    file_list = []
    for root, dirs, files in os.walk(file_location):
        for filename in files:
            if filename.endswith('.csv'):
                file_path = os.path.join(root, filename)
                file_path = os.path.abspath(file_path)
                file_list.append(file_path)

    all_data = pd.DataFrame()
    for fp in sorted(file_list)[:-1]:

    # 导入数据
        df = pd.read_csv(fp, skiprows=1, encoding='gbk')
        df_month = convert_from_day_to_month(df, rule_type='1M')

        #  合并数据
        all_data = all_data.append(df_month, ignore_index=True)  # 注意此时若一下子导入很多文件，可能会内存溢出


    return all_data
df_all_data=get_month_data()
sh_name='2019年6月交易数据_task3_'+current_date+'.csv'
df_all_data.to_csv(sh_name)
print(df_all_data)



